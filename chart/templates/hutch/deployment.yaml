{{- if .Values.hutch.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ecommerce-store-front.fullname" . }}-hutch
  labels:
    {{- include "ecommerce-store-front.labels" . | nindent 4 }}-hutch
spec:
{{- if not .Values.hutch.autoscaling.enabled }}
  replicas: {{ .Values.hutch.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "ecommerce-store-front.selectorLabels" . | nindent 6 }}-hutch
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "ecommerce-store-front.selectorLabels" . | nindent 8 }}-hutch
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ecommerce-store-front.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          command:
            - "bundle"
          args:
            - "exec"
            - "hutch"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "ecommerce-store-front.fullname" . }}-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}